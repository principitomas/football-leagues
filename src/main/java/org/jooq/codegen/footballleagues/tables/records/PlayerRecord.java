/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.footballleagues.tables.records;


import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.codegen.footballleagues.tables.Player;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerRecord extends UpdatableRecordImpl<PlayerRecord> implements Record7<UShort, String, Integer, LocalDate, String, String, UShort> {

    private static final long serialVersionUID = 1041690313;

    /**
     * Setter for <code>football_leagues.player.id</code>.
     */
    public void setId(UShort value) {
        set(0, value);
    }

    /**
     * Getter for <code>football_leagues.player.id</code>.
     */
    public UShort getId() {
        return (UShort) get(0);
    }

    /**
     * Setter for <code>football_leagues.player.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>football_leagues.player.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>football_leagues.player.position</code>.
     */
    public void setPosition(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>football_leagues.player.position</code>.
     */
    public Integer getPosition() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>football_leagues.player.date_of_birth</code>.
     */
    public void setDateOfBirth(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>football_leagues.player.date_of_birth</code>.
     */
    public LocalDate getDateOfBirth() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>football_leagues.player.country_of_birth</code>.
     */
    public void setCountryOfBirth(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>football_leagues.player.country_of_birth</code>.
     */
    public String getCountryOfBirth() {
        return (String) get(4);
    }

    /**
     * Setter for <code>football_leagues.player.nationality</code>.
     */
    public void setNationality(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>football_leagues.player.nationality</code>.
     */
    public String getNationality() {
        return (String) get(5);
    }

    /**
     * Setter for <code>football_leagues.player.team_id</code>.
     */
    public void setTeamId(UShort value) {
        set(6, value);
    }

    /**
     * Getter for <code>football_leagues.player.team_id</code>.
     */
    public UShort getTeamId() {
        return (UShort) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UShort> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UShort, String, Integer, LocalDate, String, String, UShort> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UShort, String, Integer, LocalDate, String, String, UShort> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UShort> field1() {
        return Player.PLAYER.ID;
    }

    @Override
    public Field<String> field2() {
        return Player.PLAYER.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Player.PLAYER.POSITION;
    }

    @Override
    public Field<LocalDate> field4() {
        return Player.PLAYER.DATE_OF_BIRTH;
    }

    @Override
    public Field<String> field5() {
        return Player.PLAYER.COUNTRY_OF_BIRTH;
    }

    @Override
    public Field<String> field6() {
        return Player.PLAYER.NATIONALITY;
    }

    @Override
    public Field<UShort> field7() {
        return Player.PLAYER.TEAM_ID;
    }

    @Override
    public UShort component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getPosition();
    }

    @Override
    public LocalDate component4() {
        return getDateOfBirth();
    }

    @Override
    public String component5() {
        return getCountryOfBirth();
    }

    @Override
    public String component6() {
        return getNationality();
    }

    @Override
    public UShort component7() {
        return getTeamId();
    }

    @Override
    public UShort value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getPosition();
    }

    @Override
    public LocalDate value4() {
        return getDateOfBirth();
    }

    @Override
    public String value5() {
        return getCountryOfBirth();
    }

    @Override
    public String value6() {
        return getNationality();
    }

    @Override
    public UShort value7() {
        return getTeamId();
    }

    @Override
    public PlayerRecord value1(UShort value) {
        setId(value);
        return this;
    }

    @Override
    public PlayerRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public PlayerRecord value3(Integer value) {
        setPosition(value);
        return this;
    }

    @Override
    public PlayerRecord value4(LocalDate value) {
        setDateOfBirth(value);
        return this;
    }

    @Override
    public PlayerRecord value5(String value) {
        setCountryOfBirth(value);
        return this;
    }

    @Override
    public PlayerRecord value6(String value) {
        setNationality(value);
        return this;
    }

    @Override
    public PlayerRecord value7(UShort value) {
        setTeamId(value);
        return this;
    }

    @Override
    public PlayerRecord values(UShort value1, String value2, Integer value3, LocalDate value4, String value5, String value6, UShort value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerRecord
     */
    public PlayerRecord() {
        super(Player.PLAYER);
    }

    /**
     * Create a detached, initialised PlayerRecord
     */
    public PlayerRecord(UShort id, String name, Integer position, LocalDate dateOfBirth, String countryOfBirth, String nationality, UShort teamId) {
        super(Player.PLAYER);

        set(0, id);
        set(1, name);
        set(2, position);
        set(3, dateOfBirth);
        set(4, countryOfBirth);
        set(5, nationality);
        set(6, teamId);
    }
}

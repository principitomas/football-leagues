/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.footballleagues.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.codegen.footballleagues.tables.Competition;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompetitionRecord extends UpdatableRecordImpl<CompetitionRecord> implements Record4<UShort, String, String, String> {

    private static final long serialVersionUID = -975234521;

    /**
     * Setter for <code>football_leagues.competition.id</code>.
     */
    public void setId(UShort value) {
        set(0, value);
    }

    /**
     * Getter for <code>football_leagues.competition.id</code>.
     */
    public UShort getId() {
        return (UShort) get(0);
    }

    /**
     * Setter for <code>football_leagues.competition.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>football_leagues.competition.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>football_leagues.competition.code</code>.
     */
    public void setCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>football_leagues.competition.code</code>.
     */
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>football_leagues.competition.area_name</code>.
     */
    public void setAreaName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>football_leagues.competition.area_name</code>.
     */
    public String getAreaName() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UShort> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UShort, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UShort, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UShort> field1() {
        return Competition.COMPETITION.ID;
    }

    @Override
    public Field<String> field2() {
        return Competition.COMPETITION.NAME;
    }

    @Override
    public Field<String> field3() {
        return Competition.COMPETITION.CODE;
    }

    @Override
    public Field<String> field4() {
        return Competition.COMPETITION.AREA_NAME;
    }

    @Override
    public UShort component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public String component4() {
        return getAreaName();
    }

    @Override
    public UShort value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public String value4() {
        return getAreaName();
    }

    @Override
    public CompetitionRecord value1(UShort value) {
        setId(value);
        return this;
    }

    @Override
    public CompetitionRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public CompetitionRecord value3(String value) {
        setCode(value);
        return this;
    }

    @Override
    public CompetitionRecord value4(String value) {
        setAreaName(value);
        return this;
    }

    @Override
    public CompetitionRecord values(UShort value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompetitionRecord
     */
    public CompetitionRecord() {
        super(Competition.COMPETITION);
    }

    /**
     * Create a detached, initialised CompetitionRecord
     */
    public CompetitionRecord(UShort id, String name, String code, String areaName) {
        super(Competition.COMPETITION);

        set(0, id);
        set(1, name);
        set(2, code);
        set(3, areaName);
    }
}

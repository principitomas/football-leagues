/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.footballleagues;


import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.codegen.footballleagues.tables.Competition;
import org.jooq.codegen.footballleagues.tables.Player;
import org.jooq.codegen.footballleagues.tables.Team;
import org.jooq.codegen.footballleagues.tables.TeamCompetition;
import org.jooq.codegen.footballleagues.tables.records.CompetitionRecord;
import org.jooq.codegen.footballleagues.tables.records.PlayerRecord;
import org.jooq.codegen.footballleagues.tables.records.TeamCompetitionRecord;
import org.jooq.codegen.footballleagues.tables.records.TeamRecord;
import org.jooq.impl.Internal;
import org.jooq.types.UShort;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>football_leagues</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CompetitionRecord, UShort> IDENTITY_COMPETITION = Identities0.IDENTITY_COMPETITION;
    public static final Identity<PlayerRecord, UShort> IDENTITY_PLAYER = Identities0.IDENTITY_PLAYER;
    public static final Identity<TeamRecord, UShort> IDENTITY_TEAM = Identities0.IDENTITY_TEAM;
    public static final Identity<TeamCompetitionRecord, UShort> IDENTITY_TEAM_COMPETITION = Identities0.IDENTITY_TEAM_COMPETITION;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CompetitionRecord> KEY_COMPETITION_PRIMARY = UniqueKeys0.KEY_COMPETITION_PRIMARY;
    public static final UniqueKey<CompetitionRecord> KEY_COMPETITION_CODE = UniqueKeys0.KEY_COMPETITION_CODE;
    public static final UniqueKey<PlayerRecord> KEY_PLAYER_PRIMARY = UniqueKeys0.KEY_PLAYER_PRIMARY;
    public static final UniqueKey<TeamRecord> KEY_TEAM_PRIMARY = UniqueKeys0.KEY_TEAM_PRIMARY;
    public static final UniqueKey<TeamRecord> KEY_TEAM_NAME = UniqueKeys0.KEY_TEAM_NAME;
    public static final UniqueKey<TeamRecord> KEY_TEAM_TLA = UniqueKeys0.KEY_TEAM_TLA;
    public static final UniqueKey<TeamCompetitionRecord> KEY_TEAM_COMPETITION_PRIMARY = UniqueKeys0.KEY_TEAM_COMPETITION_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PlayerRecord, TeamRecord> FK_TEAM_TEAM_ID = ForeignKeys0.FK_TEAM_TEAM_ID;
    public static final ForeignKey<TeamCompetitionRecord, TeamRecord> FK_TEAM_COMPETITION_ID = ForeignKeys0.FK_TEAM_COMPETITION_ID;
    public static final ForeignKey<TeamCompetitionRecord, CompetitionRecord> FK_COMPETITION_TEAM_ID = ForeignKeys0.FK_COMPETITION_TEAM_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CompetitionRecord, UShort> IDENTITY_COMPETITION = Internal.createIdentity(Competition.COMPETITION, Competition.COMPETITION.ID);
        public static Identity<PlayerRecord, UShort> IDENTITY_PLAYER = Internal.createIdentity(Player.PLAYER, Player.PLAYER.ID);
        public static Identity<TeamRecord, UShort> IDENTITY_TEAM = Internal.createIdentity(Team.TEAM, Team.TEAM.ID);
        public static Identity<TeamCompetitionRecord, UShort> IDENTITY_TEAM_COMPETITION = Internal.createIdentity(TeamCompetition.TEAM_COMPETITION, TeamCompetition.TEAM_COMPETITION.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CompetitionRecord> KEY_COMPETITION_PRIMARY = Internal.createUniqueKey(Competition.COMPETITION, "KEY_competition_PRIMARY", new TableField[] { Competition.COMPETITION.ID }, true);
        public static final UniqueKey<CompetitionRecord> KEY_COMPETITION_CODE = Internal.createUniqueKey(Competition.COMPETITION, "KEY_competition_code", new TableField[] { Competition.COMPETITION.CODE }, true);
        public static final UniqueKey<PlayerRecord> KEY_PLAYER_PRIMARY = Internal.createUniqueKey(Player.PLAYER, "KEY_player_PRIMARY", new TableField[] { Player.PLAYER.ID }, true);
        public static final UniqueKey<TeamRecord> KEY_TEAM_PRIMARY = Internal.createUniqueKey(Team.TEAM, "KEY_team_PRIMARY", new TableField[] { Team.TEAM.ID }, true);
        public static final UniqueKey<TeamRecord> KEY_TEAM_NAME = Internal.createUniqueKey(Team.TEAM, "KEY_team_name", new TableField[] { Team.TEAM.NAME }, true);
        public static final UniqueKey<TeamRecord> KEY_TEAM_TLA = Internal.createUniqueKey(Team.TEAM, "KEY_team_tla", new TableField[] { Team.TEAM.TLA }, true);
        public static final UniqueKey<TeamCompetitionRecord> KEY_TEAM_COMPETITION_PRIMARY = Internal.createUniqueKey(TeamCompetition.TEAM_COMPETITION, "KEY_team_competition_PRIMARY", new TableField[] { TeamCompetition.TEAM_COMPETITION.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<PlayerRecord, TeamRecord> FK_TEAM_TEAM_ID = Internal.createForeignKey(Keys.KEY_TEAM_PRIMARY, Player.PLAYER, "fk_team_team_id", new TableField[] { Player.PLAYER.TEAM_ID }, true);
        public static final ForeignKey<TeamCompetitionRecord, TeamRecord> FK_TEAM_COMPETITION_ID = Internal.createForeignKey(Keys.KEY_TEAM_PRIMARY, TeamCompetition.TEAM_COMPETITION, "fk_team_competition_id", new TableField[] { TeamCompetition.TEAM_COMPETITION.TEAM_ID }, true);
        public static final ForeignKey<TeamCompetitionRecord, CompetitionRecord> FK_COMPETITION_TEAM_ID = Internal.createForeignKey(Keys.KEY_COMPETITION_PRIMARY, TeamCompetition.TEAM_COMPETITION, "fk_competition_team_id", new TableField[] { TeamCompetition.TEAM_COMPETITION.COMPETITION_ID }, true);
    }
}
